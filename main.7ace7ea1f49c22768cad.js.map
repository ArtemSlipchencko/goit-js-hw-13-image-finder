{"version":3,"sources":["webpack:///./js/renderImage.js","webpack:///./js/searchImage.js","webpack:///./js/backgroundColors.js","webpack:///./index.js"],"names":["list","document","querySelector","renderImage","images","hits","forEach","el","insertAdjacentHTML","webformatURL","likes","views","comments","downloads","input","page","keyWord","renderTimes","getUrl","word","body","colors","addEventListener","e","preventDefault","searchImage","value","fetch","then","data","json","screenY","documentElement","scrollHeight","window","scrollTo","top","behavior","innerHTML","setInterval","min","max","style","backgroundColor","Math","floor","random","transition"],"mappings":"2LAAMA,EAAOC,SAASC,cAAc,YAEvBC,EAAc,SAASC,GAEhC,UAAIA,EAAOC,MAAMC,SAAQ,SAAAC,GAErBP,EAAKQ,mBAAmB,YAAxB,6FAE2DD,EAAGE,aAF9D,yKAMcF,EAAGG,MANjB,qJAUcH,EAAGI,MAVjB,kJAccJ,EAAGK,SAdjB,yJAkBcL,EAAGM,UAlBjB,iECJKC,EAAQb,SAASC,cAAc,kBAEtCF,EAAOC,SAASC,cAAc,YAChCa,EAAO,EACPC,EAAU,GACVC,EAAc,EAEZC,EAAS,SAASC,EAAMJ,GAE1B,4EAA6EI,EAA7E,SAA0FJ,EAA1F,uDCXEK,EAAOnB,SAASC,cAAc,QAG9BmB,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,WCLYpB,SAASC,cAAc,YAEvCD,SAASC,cAAc,gBAAgBoB,iBAAiB,UAAU,SAACC,GAC/DA,EAAEC,iBFQqB,SAAdC,EAAuBF,GAEhC,IAAIJ,EAAOL,EAAMY,MAEbP,IAASH,GAETD,GAAQ,EAERY,MAAMT,EAAOC,EAAMJ,IAClBa,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAEF,IAAME,EAAU9B,SAAS+B,gBAAgBC,aACzC9B,EAAY0B,GAEZK,OAAOC,SAAS,CACZC,IAAKL,EAAU,GACfM,SAAU,gBAOlBrC,EAAKsC,UAAY,GAEjBX,MAAMT,EAAOC,EAAMJ,IAClBa,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAAI,OAAI1B,EAAY0B,OAIN,IAAhBZ,IAEAhB,SAASmB,KAAKZ,mBAAmB,YAAjC,iEACAP,SAASC,cAAc,cAAcoB,iBAAiB,QAASG,GAC/DR,GAAe,GAInBD,EAAUG,EE/CdM,MDUkBc,aAAY,WANA,IAACC,EAAKC,EAQhCrB,EAAKsB,MAAMC,gBAAX,GAAgCtB,GARLmB,EAQsC,EARjCC,EAQoC,EAPjEG,KAAKC,MAAMD,KAAKE,UAAYL,EAAMD,EAAM,GAAKA,KAQhDpB,EAAKsB,MAAMK,WAAa,6BAEzB,O","file":"main.7ace7ea1f49c22768cad.js","sourcesContent":["const list = document.querySelector('.gallery');\r\n\r\nexport const renderImage = function(images) {\r\n\r\n    [...images.hits].forEach(el => {\r\n\r\n        list.insertAdjacentHTML('beforeend',\r\n        `<li class=\"photo-card\">\r\n            <img class=\"photo\" height=\"200px\" width=\"270px\" src=\"${el.webformatURL}\" alt=\"\" />\r\n            <div class=\"stats\">\r\n                <p class=\"stats-item\">\r\n                    <i class=\"material-icons\">thumb_up</i>\r\n                    ${el.likes}\r\n                </p>\r\n                <p class=\"stats-item\">\r\n                    <i class=\"material-icons\">visibility</i>\r\n                    ${el.views}\r\n                </p>\r\n                <p class=\"stats-item\">\r\n                    <i class=\"material-icons\">comment</i>\r\n                    ${el.comments}\r\n                </p>\r\n                <p class=\"stats-item\">\r\n                    <i class=\"material-icons\">cloud_download</i>\r\n                    ${el.downloads}\r\n                </p>\r\n            </div>\r\n        </li>`);\r\n\r\n    });\r\n\r\n};","import {renderImage} from './renderImage';\r\n\r\nexport const input = document.querySelector('[name=\"query\"]');\r\n\r\nconst list = document.querySelector('.gallery');\r\nlet page = 1;\r\nlet keyWord = '';\r\nlet renderTimes = 1;\r\n\r\nconst getUrl = function(word, page) {\r\n\r\n    return `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${word}&page=${page}&per_page=12&key=18951897-f7110a11ebc58b866f93acf70`;\r\n\r\n};\r\n\r\nexport const searchImage = function(e) {\r\n\r\n    let word = input.value;\r\n\r\n    if (word === keyWord) {\r\n\r\n        page += 1;\r\n\r\n        fetch(getUrl(word, page))\r\n        .then(data => data.json())\r\n        .then(data => {\r\n\r\n            const screenY = document.documentElement.scrollHeight;\r\n            renderImage(data);\r\n\r\n            window.scrollTo({\r\n                top: screenY - 50,\r\n                behavior: 'smooth'\r\n            });\r\n\r\n        });\r\n\r\n    } else {\r\n\r\n        list.innerHTML = '';\r\n\r\n        fetch(getUrl(word, page))\r\n        .then(data => data.json())\r\n        .then(data => renderImage(data));\r\n\r\n    };\r\n        \r\n        if (renderTimes === 1) {\r\n\r\n            document.body.insertAdjacentHTML('beforeend', `<button type=\"button\" class=\"load-more\">Load more...</button>`);\r\n            document.querySelector('.load-more').addEventListener('click', searchImage);\r\n            renderTimes += 1;\r\n\r\n        };\r\n        \r\n        keyWord = word;\r\n\r\n};\r\n\r\n","const body = document.querySelector('body');\r\n\r\n\r\nconst colors = [\r\n    '#B8860B',\r\n    '#A52A2A',\r\n    '#BC8F8F',\r\n    '#C0C0C0',\r\n    '#2F4F4F',\r\n    '#483D8B',\r\n];\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const colorSwitch = function() {\r\n\r\n    const colorTime = setInterval(()=> {\r\n\r\n        body.style.backgroundColor = `${colors[randomIntegerFromInterval(0, 5)]}`;\r\n        body.style.transition = 'background-color 3s ease';\r\n\r\n    }, 4000);\r\n\r\n};","import css from \"./css/style.css\";\r\nimport {searchImage} from './js/searchImage.js';\r\nimport {colorSwitch} from './js/backgroundColors.js';\r\n\r\nconst gallery = document.querySelector('.gallery');\r\n\r\ndocument.querySelector('.search-form').addEventListener('submit', (e)=> {\r\n    e.preventDefault();\r\n    searchImage();\r\n});\r\n\r\ncolorSwitch();"],"sourceRoot":""}